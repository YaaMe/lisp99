(defun pack (lista)
  (if (listp (car lista))
      lista
      (if (eql (car lista) (car (last lista)))
          (pack )
          (pack (list (cdr lista) (list (car lista)))))))
(defun pack (lista))

(defun pack (lista)
  (if lista
      (if (listp (car lista))
          (if (eql (car (car lista)) (car (cdr lista)))
              (pack (cons (append (car lista) (list (car (cdr lista)))) (cdr (cdr lista))))
              (list (car lista) (pack (cdr lista))))
          (pack (cons (list (car lista)) (cdr lista))))))

(pack '(a a a a b c c a a d e e e e))
(pack '(a a a))
(pack '((a) a))
(last '(1 4))
(cdr '(a a))
(cons '(a) '(a a))
(append 4 4)
(eql (car (car '((A) a a)))
(car (cdr '((A) a a))))
(append '(4 4) '(4))
(cons (list (car '(a a a))) (cdr '(a a a)))
( '((4 4)))
(pop (list 1 2 3 4))
(car (car '((A) A A)))
(list '(1 2 3 (1 2)) '(1))
(cons '(1 2 3 (1 2)) '(1))
(list '(1 2 3) (list 1))
(append '(1 2 3) '(4))
(cons '(1 2 3))
(last '(1 2 ))
